<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.0" timelimit="10" steplimit="0" memlimit="4000"/>
<prover id="2" name="Z3" version="4.8.6" timelimit="10" steplimit="0" memlimit="4000"/>
<prover id="3" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="coloring.mlw"/>
<theory name="Coloring_Ring">
 <goal name="neighbor_set&#39;vc" expl="VC for neighbor_set">
 <transf name="split_vc" >
  <goal name="neighbor_set&#39;vc.0" expl="precondition">
  <proof prover="3"><result status="valid" time="0.04" steps="9798"/></proof>
  </goal>
  <goal name="neighbor_set&#39;vc.1" expl="precondition">
  <proof prover="3"><result status="valid" time="0.07" steps="10034"/></proof>
  </goal>
  <goal name="neighbor_set&#39;vc.2" expl="postcondition">
  <proof prover="3"><result status="valid" time="0.41" steps="32235"/></proof>
  </goal>
  <goal name="neighbor_set&#39;vc.3" expl="postcondition">
  <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.42" steps="1882958"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="free&#39;vc" expl="VC for free">
 <proof prover="1" timelimit="5" memlimit="1000"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" timelimit="1" memlimit="1000"><result status="timeout" time="1.00" steps="1458524"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="69881"/></proof>
 <transf name="split_vc" >
  <goal name="free&#39;vc.0" expl="precondition">
  <proof prover="3"><result status="valid" time="0.26" steps="23805"/></proof>
  </goal>
  <goal name="free&#39;vc.1" expl="postcondition">
  <proof prover="3"><result status="valid" time="0.55" steps="81887"/></proof>
  </goal>
  <goal name="free&#39;vc.2" expl="postcondition">
  <proof prover="1"><result status="timeout" time="10.00"/></proof>
  <proof prover="2"><result status="timeout" time="10.00" steps="7119111"/></proof>
  <proof prover="3" timelimit="10" memlimit="4000"><result status="timeout" time="10.00" steps="1173567"/></proof>
  </goal>
  <goal name="free&#39;vc.3" expl="postcondition">
  <proof prover="1" timelimit="1" memlimit="1000"><result status="valid" time="0.18" steps="1523"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="get_colors&#39;vc" expl="VC for get_colors">
 <proof prover="3"><result status="valid" time="0.35" steps="37170"/></proof>
 </goal>
 <goal name="handleEnbld&#39;vc" expl="VC for handleEnbld">
 <proof prover="3"><result status="valid" time="0.26" steps="17084"/></proof>
 </goal>
 <goal name="Steps.indpred&#39;refn&#39;vc" expl="VC for indpred&#39;refn">
 <proof prover="3"><result status="valid" time="0.15" steps="14232"/></proof>
 </goal>
 <goal name="Steps.handleEnbld&#39;refn&#39;vc" expl="VC for handleEnbld&#39;refn">
 <proof prover="3"><result status="valid" time="0.21" steps="29608"/></proof>
 </goal>
 <goal name="goal_colored">
 <proof prover="3"><result status="valid" time="0.10" steps="16240"/></proof>
 </goal>
 <goal name="measureNode&#39;vc" expl="VC for measureNode">
 <proof prover="3"><result status="valid" time="0.12" steps="15502"/></proof>
 </goal>
 <goal name="measureNodes&#39;vc" expl="VC for measureNodes">
 <proof prover="3"><result status="valid" time="0.29" steps="30682"/></proof>
 </goal>
 <goal name="measureAllNodes&#39;vc" expl="VC for measureAllNodes">
 <proof prover="3"><result status="valid" time="0.18" steps="17682"/></proof>
 </goal>
 <goal name="step_preserves_states_bis">
 <proof prover="3"><result status="valid" time="0.07" steps="16210"/></proof>
 </goal>
 <goal name="no_conflict_after_step_alt">
 <proof prover="3"><result status="valid" time="0.11" steps="18629"/></proof>
 </goal>
 <goal name="no_conflict_after_step">
 <proof prover="3"><result status="valid" time="0.16" steps="17205"/></proof>
 </goal>
 <goal name="measure_null_eq_no_conflict">
 <proof prover="3"><result status="valid" time="0.17" steps="16521"/></proof>
 </goal>
 <goal name="measure_null_after_step">
 <proof prover="3"><result status="valid" time="0.07" steps="17110"/></proof>
 </goal>
 <goal name="measureDeltaNode&#39;vc" expl="VC for measureDeltaNode">
 <proof prover="3"><result status="valid" time="0.10" steps="17066"/></proof>
 </goal>
 <goal name="prod">
 <proof prover="3"><result status="valid" time="0.19" steps="20792"/></proof>
 </goal>
 <goal name="measureDeltaNodes&#39;vc" expl="VC for measureDeltaNodes">
 <proof prover="3"><result status="valid" time="0.17" steps="18351"/></proof>
 </goal>
 <goal name="measureAllDeltaNodes&#39;vc" expl="VC for measureAllDeltaNodes">
 <proof prover="3"><result status="valid" time="0.17" steps="18668"/></proof>
 </goal>
 <goal name="goal_decreasesMeasure">
 <proof prover="3"><result status="valid" time="0.18" steps="18842"/></proof>
 </goal>
 <goal name="help_goal">
 <proof prover="3"><result status="valid" time="0.12" steps="17851"/></proof>
 </goal>
 <goal name="goal_converged">
 <proof prover="3"><result status="valid" time="0.59" steps="70514"/></proof>
 </goal>
 <goal name="terminated">
 <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" timelimit="1" memlimit="1000" obsolete="true"><result status="timeout" time="1.00" steps="2165575"/></proof>
 <proof prover="3"><result status="valid" time="0.52" steps="68710"/></proof>
 <transf name="split_vc" >
  <goal name="terminated.0">
  <proof prover="1" obsolete="true"><result status="timeout" time="10.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="10.00" steps="12889141"/></proof>
  <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00" steps="1259005"/></proof>
  <transf name="induction" arg1="n">
   <goal name="terminated.0.0" expl="base case">
   <proof prover="0" obsolete="true"><result status="highfailure" time="0.07" steps="185"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="10.00" steps="15279787"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00" steps="1225224"/></proof>
   </goal>
   <goal name="terminated.0.1" expl="recursive case">
   <proof prover="0" obsolete="true"><result status="highfailure" time="0.05" steps="185"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="10.00" steps="12139363"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00" steps="1185800"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="terminated.1">
  </goal>
 </transf>
 </goal>
 <goal name="convergence">
 <proof prover="1"><result status="timeout" time="10.00"/></proof>
 <proof prover="2"><result status="timeout" time="10.00" steps="2752032275"/></proof>
 <proof prover="3" timelimit="10" memlimit="4000"><result status="unknown" time="0.21" steps="25283"/></proof>
 <transf name="inline_goal" >
  <goal name="convergence.0">
  <transf name="split_all_full" >
   <goal name="convergence.0.0">
   <proof prover="1"><result status="timeout" time="10.00"/></proof>
   <proof prover="2"><result status="timeout" time="10.00" steps="61623838"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000"><result status="unknown" time="0.19" steps="32414"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
